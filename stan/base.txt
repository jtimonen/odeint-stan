// 
// You can make this into a complete stan program by adding a 'functions block'
// in the beginning. It should include a function called 'odefun' with signature
//
// real[] odefun(real t, real[] y, real[] theta, real[] x_r, int[] x_i)
//
// and a function called 'odeint' which calls 'odefun' and has signature
//
// real[,] odeint(real[] y0, real t0, real[] t, real[] theta, real[] x_r, int[] x_i)
//
// You can also change the priors, or make y0 a parameter etc.
//

data{
  int<lower=1> N; // number of data points
  int<lower=1> D; // number of state variables
  int<lower=0> P; // number of ODE parameters (theta)
  real t[N];      // time measurements
  real y[N, D];   // state measurements
  real t0;        // initial time
  real y0[D];     // initial state
}

transformed data{
  real x_r[0];
  int x_i[0];
}

parameters{
  real<lower=0> theta[P];
  real<lower=0> sigma;
}

model{
  real y_hat[N, D];
  y_hat = odeint(y0, t0, t, theta, x_r, x_i);
  for(d in 1:D){
    target += normal_lpdf(y[:,d] | y_hat[:,d], sigma);
  }
  theta ~ normal(0, 5);
  sigma ~ normal(0, 5);
}
